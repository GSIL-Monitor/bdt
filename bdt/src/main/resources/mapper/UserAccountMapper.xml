<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.infaith.module.mapper.UserAccountMapper">
  <resultMap id="BaseResultMap" type="cn.com.infaith.module.model.UserAccount">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="admin_id" jdbcType="VARCHAR" property="adminId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="ip_region" jdbcType="VARCHAR" property="ipRegion" />
    <result column="ip_address" jdbcType="VARCHAR" property="ipAddress" />
    <result column="ip_address_public" jdbcType="VARCHAR" property="ipAddressPublic" />
    <result column="effective_amount" jdbcType="DECIMAL" property="effectiveAmount" />
    <result column="login_status" jdbcType="TINYINT" property="loginStatus" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="update_status" jdbcType="TINYINT" property="updateStatus" />
    <result column="request_status" jdbcType="TINYINT" property="requestStatus" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    UPDATE user_account SET is_delete = 1 WHERE id = #{id}
  </delete>
  <insert id="insert" parameterType="cn.com.infaith.module.model.UserAccount">
    insert into user_account (id, admin_id, name, account, type,
      password, ip_region, ip_address, ip_address_public, effective_amount, login_status, update_time,
      is_delete, update_status, request_status, remark)
    values (#{id,jdbcType=VARCHAR}, #{adminId}, #{name,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{type},
      #{password,jdbcType=VARCHAR}, #{ipRegion}, #{ipAddress,jdbcType=VARCHAR}, #{ipAddressPublic},
       #{effectiveAmount,jdbcType=DECIMAL}, 0, now(), 0, 1, 0, #{remark})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.com.infaith.module.model.UserAccount">
    update user_account
    set
      id = #{id}
    <if test="name != null and name != ''">
      ,name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="account != null and account != ''">
      ,account = #{account,jdbcType=VARCHAR}
    </if>
    <if test="password != null and password != ''">
      ,password = #{password,jdbcType=VARCHAR}
    </if>
    <if test="ipRegion != null and ipRegion != ''">
      ,ip_region = #{ipRegion,jdbcType=VARCHAR}
    </if>
    <if test="ipAddress != null and ipAddress != ''">
      ,ip_address = #{ipAddress,jdbcType=VARCHAR}
    </if>
    <if test="ipAddressPublic != null and ipAddressPublic != ''">
      ,ip_address_public = #{ipAddressPublic,jdbcType=VARCHAR}
    </if>
    <if test="effectiveAmount != null">
      ,effective_amount = #{effectiveAmount,jdbcType=DECIMAL}
    </if>
    <if test="loginStatus != null">
      ,login_status = #{loginStatus}
    </if>
    <if test="type != null">
      ,type = #{type}
    </if>
    <if test="updateStatus != null">
      ,update_status = #{updateStatus}
    </if>
    <if test="requestStatus != null">
      ,request_status = #{requestStatus}
    </if>
    <if test="remark != null">
      ,remark = #{remark}
    </if>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, admin_id, password, name, account, ip_region, ip_address, effective_amount, login_status, is_delete, type,ip_address_public, update_status, request_status, remark
    from user_account
    where id = #{id,jdbcType=VARCHAR} AND is_delete = 0
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, admin_id, name, account, ip_address, effective_amount, is_delete, type, ip_address_public, update_status, request_status, remark
    from user_account WHERE is_delete = 0
  </select>

  <select id="selectByAccountAndPassWord" resultMap="BaseResultMap">
    select id, admin_id, name, account, ip_region ipRegion, ip_address ipAddress, effective_amount effectiveAmount,
    login_status loginStatus, is_delete isDelete, type, ip_address_public, update_status, request_status, remark
    from user_account
    where account = #{account} AND password = #{password} AND is_delete = 0
  </select>

  <select id="selectCountByAccount" resultType="int">
    SELECT count(1) FROM user_account
    WHERE account = #{account} and is_delete = 0
    AND admin_id = #{adminId}
  </select>

  <select id="selectByAdmin" resultMap="BaseResultMap" parameterType="String">
    select id, admin_id, name, account, password, ip_region, ip_address, effective_amount, login_status, is_delete, type,ip_address_public, update_status, request_status, remark
    from user_account
    where admin_id = #{adminId} AND is_delete = 0
  </select>

  <select id="getUserIdByAdmin" parameterType="String" resultType="String">
    select id from user_account
    where admin_id = #{adminId} AND is_delete = 0
  </select>

  <update id="editUpdateTime" parameterType="String">
    UPDATE user_account SET update_time = now() WHERE id = #{userId}
  </update>

  <update id="updateLoginStatusTrue">
    UPDATE  user_account SET login_status = 1 WHERE update_time > DATE_ADD(NOW(),INTERVAL -5 MINUTE);
  </update>

  <update id="updateLoginStatusFalse">
    UPDATE  user_account SET login_status = 0 WHERE update_time <![CDATA[ <= ]]> DATE_ADD(NOW(),INTERVAL -5 MINUTE);
  </update>

  <update id="updateRequestStatus">
    UPDATE user_account SET request_status = #{requestStatus} WHERE id = #{userId}
  </update>

  <select id="selectRequestCount" parameterType="String" resultType="int">
    SELECT
      COUNT(1)
  FROM
      table_request
  WHERE
      user_id = #{userId}
      AND create_time BETWEEN DATE_SUB(NOW(), INTERVAL 1 MINUTE)
      AND NOW()
  </select>
</mapper>